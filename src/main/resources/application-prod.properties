# Configuração para ambiente de produção (Render.com)
spring.application.name=rpg_market
server.port=${SERVER_PORT:8080}
server.error.whitelabel.enabled=false

# Logging otimizado para produção
logging.level.com.programacao_web.rpg_market=INFO
logging.level.org.springframework.security=WARN
logging.level.org.springframework.web=WARN
logging.level.org.springframework=INFO
logging.level.root=INFO

# MongoDB Configuration usando variáveis de ambiente
spring.data.mongodb.database=${MONGODB_DATABASE:Cluster0}
spring.data.mongodb.uri=${MONGODB_URI:mongodb+srv://admin:batata123@cluster0.clcxyly.mongodb.net/?}

# Configuração Thymeleaf para produção
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.mode=HTML
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.cache=true

# Configuração de Upload de Arquivos para Render.com
spring.servlet.multipart.enabled=true
spring.servlet.multipart.file-size-threshold=2KB
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# Diretório de upload (Render.com tem sistema de arquivos efêmero)
app.upload.dir=${APP_UPLOAD_DIR:/tmp/uploads}

# Configurações adicionais para produção
spring.jpa.show-sql=false
spring.jpa.hibernate.ddl-auto=validate
